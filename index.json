[{"authors":["admin"],"categories":null,"content":" I am part of the Graph AI team at Katana Graph, a start-up founded by Prof. Keshav Pingali and Prof. Chris Rossbach in 2020. Katana Graph provides a distributed graph intelligence platform with highly scalable and lightning fast graph query, analytics, mining, and AI solutions. If you are passionate about graph algorithms/graph AI and looking for opportunities, feel free to reach out.\nBefore joining Katana Graph, I have spent a couple of years as a postdoctoral researcher at UC Santa Cruz where I worked with Prof. C. Seshadhri. I obtained my Ph.D. in Computer Science from Dartmouth College, advised by Prof. Amit Chakrabarti. In the past, I have worked at IBM Research Lab and Adobe India. \u0026nbsp;\nResearch Interests I am broadly interested in the topic of large-scale graph analysis. My current research involves developing scalable graph AI models for real-world applications. I also work on designing efficient and practical graph algorithms with theoretical guarantees in various Big Data models such as the streaming/distributed models. Over the past few years, I have enjoyed working on a diverse range of topics including algorithmic fairness, scalable clustering, communication complexity, arithmetic circuit complexity, and approximation algorithms. My research has been published at premier theoretical computer science conferences such as SODA, ITCS, ICALP, etc. as well as at top-tier ML/data mining conferences such as NeurIPS, KDD, VLDB, etc. For more details, see my publications.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1640671370,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://skalyanb.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am part of the Graph AI team at Katana Graph, a start-up founded by Prof. Keshav Pingali and Prof. Chris Rossbach in 2020. Katana Graph provides a distributed graph intelligence platform with highly scalable and lightning fast graph query, analytics, mining, and AI solutions. If you are passionate about graph algorithms/graph AI and looking for opportunities, feel free to reach out.\nBefore joining Katana Graph, I have spent a couple of years as a postdoctoral researcher at UC Santa Cruz where I worked with Prof.","tags":null,"title":"Suman Kalyan Bera","type":"authors"},{"authors":null,"categories":null,"content":" Quickly discover relevant content by filtering publications.   -- Program Committee:\n The Web Conference 2022 (formerly known as WWW) The International Conference on Database Theory (ICDT) 2022 The Web Conference 2021 (formerly known as WWW) SDM 2021  Reviewer:\n AISTATS (2022), SODA (2019, 2020, 2021), FSTTCS (2020), ICALP (2018), CCC (2017), Network Science etc.  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640719755,"objectID":"bfc9941b6b6fd7b4ef09dd0ccd08af0c","permalink":"https://skalyanb.github.io/services/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/services/","section":"","summary":" Quickly discover relevant content by filtering publications.   -- Program Committee:\n The Web Conference 2022 (formerly known as WWW) The International Conference on Database Theory (ICDT) 2022 The Web Conference 2021 (formerly known as WWW) SDM 2021  Reviewer:\n AISTATS (2022), SODA (2019, 2020, 2021), FSTTCS (2020), ICALP (2018), CCC (2017), Network Science etc.  ","tags":null,"title":"Services","type":"page"},{"authors":null,"categories":null,"content":" Quickly discover relevant content by filtering publications.   -- I have served as a Teaching Assistant for the following courses.\n Machine Learning and Statistical Data Analysis (CS74/CS174) Algorithms (CS31) Discrete Mathematics in Computer Science (CS30) Theory of Computation (CS39) Computer Architecture  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640719755,"objectID":"416f445d9bade50adf875443b512ceeb","permalink":"https://skalyanb.github.io/teaching/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/teaching/","section":"","summary":" Quickly discover relevant content by filtering publications.   -- I have served as a Teaching Assistant for the following courses.\n Machine Learning and Statistical Data Analysis (CS74/CS174) Algorithms (CS31) Discrete Mathematics in Computer Science (CS30) Theory of Computation (CS39) Computer Architecture  ","tags":null,"title":"Teaching","type":"page"},{"authors":["Suman K. Bera","[Lior Gishboliner](https://people.math.ethz.ch/~lgishboli/)","Yevgeny Levanzov","[C. Seshadhri](https://users.soe.ucsc.edu/~sesh/)","[Asaf Shapira](http://www.math.tau.ac.il/~asafico/)"],"categories":["published"],"content":"","date":1640563200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640671370,"objectID":"806c1f590bb176aab805f421aafea785","permalink":"https://skalyanb.github.io/publication/bera-2022-jacm/","publishdate":"2021-12-27T21:25:15-08:00","relpermalink":"/publication/bera-2022-jacm/","section":"publication","summary":"A tighter characterization of the subgraphs for which the homomorphism count can be obtained in near-linear time in sparse graphs.","tags":["Subgraph Counting","Homomorphism Counting","Conditional Lower Bounds","Graph Algorithms","Graph Mining"],"title":"Counting Subgraphs in Degenerate Graphs","type":"publication"},{"authors":["Suman K. Bera","[Noujan Pashanasangi](https://users.soe.ucsc.edu/~npasha/)","[C. Seshadhri](https://users.soe.ucsc.edu/~sesh/)"],"categories":["published"],"content":"","date":1595914592,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610689083,"objectID":"c1de5e1d4046e88fc60f265f066387b3","permalink":"https://skalyanb.github.io/publication/bera-2020-homomorphism/","publishdate":"2020-07-27T22:36:32-07:00","relpermalink":"/publication/bera-2020-homomorphism/","section":"publication","summary":"A characterization of the pattern subgraphs for which the homomorphism count can be obtained in near-linear time in sparse graphs.","tags":["Subgraph Counting","Homomorphism Counting","Conditional Lower Bounds","Graph Algorithms","Graph Mining"],"title":"Near-Linear Time Homomorphism Counting in Bounded Degeneracy Graphs: The Barrier of Long Induced Cycles","type":"publication"},{"authors":["Nihesh Anderson","Suman K. Bera","[Syamantak Das](http://faculty.iiitd.ac.in/~syamantak/)","[Yang Liu](http://www.yliuu.com/)"],"categories":["in-submission"],"content":"","date":1595910791,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"97cbcd9111d3e7a59683f5e5f2874ffb","permalink":"https://skalyanb.github.io/publication/anderson-2020-distributional/","publishdate":"2020-07-27T21:33:11-07:00","relpermalink":"/publication/anderson-2020-distributional/","section":"publication","summary":"Introducing a notion of individual fairness for popular $k$-clustering problems such as $k$-means, $k$-center, $k$-median etc.","tags":["Fairness in ML","Clustering"],"title":"Distributional Individual Fairness in Clustering","type":"publication"},{"authors":["Suman K. Bera","[C. Seshadhri](https://users.soe.ucsc.edu/~sesh/)"],"categories":["published"],"content":"Here is a 2 min promotional video of our work. For the video of the full talk, click here.\n  ","date":1590969600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1598386844,"objectID":"3845cfce7d55481847a966885c1190f8","permalink":"https://skalyanb.github.io/publication/bera-2020-random_walk/","publishdate":"2020-06-01T00:00:00Z","relpermalink":"/publication/bera-2020-random_walk/","section":"publication","summary":"Triangle counting is a fundamental problem in the analysis of large graphs. There is a rich body of work on this problem, in varying streaming and distributed models, yet all these algorithms require reading the whole input graph. In many scenarios, we do not have access to the whole graph, and can only sample a small portion of the graph (typically through crawling). In such a setting, how can we accurately estimate the triangle count of the graph?\n\nWe formally study triangle counting in the *random walk* access model introduced by Dasgupta et al (WWW '14) and Chierichetti et al (WWW '16). We have access to an arbitrary seed vertex of the graph, and can only perform random walks. This model is restrictive in access and captures the challenges of collecting real-world graphs. Even sampling a uniform random vertex is a hard task in this model.\n\nDespite these challenges, we design a provable and practical algorithm, TETRIS, for triangle counting in this model. TETRIS is the first provably sublinear algorithm (for most natural parameter settings) that approximates the triangle count in the random walk model, for graphs with low mixing time. Our result builds on recent advances in the theory of sublinear algorithms. The final sample built by TETRIS is a careful mix of random walks and degree-biased sampling of neighborhoods. Empirically, TETRIS accurately counts triangles on a variety of large graphs, getting estimates within 5% relative error by looking at 3% of the number of edges. ","tags":["Graph Mining","Random Walk","Graph Crawling","Subgraph Counting","Triangle Counting","Graph Algorithms"],"title":"How to Count Triangles, without Seeing the Whole Graph","type":"publication"},{"authors":["Suman K. Bera","[C. Seshadhri](https://users.soe.ucsc.edu/~sesh/)"],"categories":["published"],"content":"","date":1588291200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"2bb281234704b46828f0445e106abb14","permalink":"https://skalyanb.github.io/publication/bera-2020-degen/","publishdate":"2020-05-01T00:00:00Z","relpermalink":"/publication/bera-2020-degen/","section":"publication","summary":"We revisit the well-studied problem of triangle count estimation in graph streams. Given a graph represented as a stream of $m$ edges, our aim is to compute a $(1\\pm\\varepsilon)$-approximation to the triangle count $T$, using a small space algorithm. For arbitrary order and a constant number of passes, the space complexity is known to be essentially ${\\Theta(\\min(m^{{3}/{2}}/T, m/\\sqrt{T}))}$ (McGregor et al., PODS 2016, Bera et al., STACS 2017).\n\nWe give a (constant pass, arbitrary order) streaming algorithm that can circumvent this lower bound for *low degeneracy graphs*. The degeneracy, $\\kappa$, is a nuanced measure of density, and the class of constant degeneracy graphs is immensely rich (containing planar graphs, minor-closed families, and preferential attachment graphs). We design a streaming algorithm with space complexity $\\widetilde{O}(m\\kappa/T)$. For constant degeneracy graphs, this bound is $\\widetilde{O}(m/T)$, which is significantly smaller than both $m^{{3}/{2}}/T$ and $m/\\sqrt{T}$. We complement our algorithmic result with a nearly matching lower bound of $\\Omega(m\\kappa/T)$ ","tags":["Subgraph Counting","Triangle Counting","Streaming Model","Graph Algorithms","Lower Bounds"],"title":"How the Degeneracy Helps for Triangle Counting in Graph Streams","type":"publication"},{"authors":["Suman K. Bera","[Amit Chakrabarti](https://www.cs.dartmouth.edu/~ac/)","[Prantar Ghosh](https://sites.google.com/view/prantarg/home)"],"categories":["published"],"content":"","date":1585699200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"a7b13dac08884e74eb9bf9700266a470","permalink":"https://skalyanb.github.io/publication/bera-2019-graph/","publishdate":"2020-01-09T01:14:13.740304Z","relpermalink":"/publication/bera-2019-graph/","section":"publication","summary":"We study the problem of coloring a given graph using a small number of colors in several well-established models of computation for big data. These include the data streaming model, the general graph query model, the massively parallel communication (MPC) model, and the CONGESTED-CLIQUE and the LOCAL models of distributed computation. On the one hand, we give algorithms with sublinear complexity, for the appropriate notion of complexity in each of these models. Our algorithms color a graph $G$ using $\\kappa(G)\\cdot (1+o(1))$ colors, where $\\kappa(G)$ is the degeneracy of $G$: this parameter is closely related to the arboricity $\\alpha(G)$. As a function of $\\kappa(G)$ alone, our results are close to best possible, since the optimal number of colors is $\\kappa(G)+1$. For several classes of graphs, including real-world ''big graphs,'' our results improve upon the number of colors used by the various $(\\Delta(G)+1)$-coloring algorithms known for these models, where $\\Delta(G)$ is the maximum degree in $G$, since $\\Delta(G) \\ge \\kappa(G)$ and can in fact be arbitrarily larger than $\\kappa(G)$.\n\n\nOn the other hand, we establish certain lower bounds indicating that sublinear algorithms probably cannot go much further. In particular, we prove that any randomized coloring algorithm that uses at most $\\kappa(G)+O(1)$ colors would require $\\Omega(n^2)$ storage in the one pass streaming model, and $\\Omega(n^2)$ many queries in the general graph query model, where $n$ is the number of vertices in the graph. These lower bounds hold even when the value of $\\kappa(G)$ is known in advance; at the same time, our upper bounds do not require $\\kappa(G)$ to be given in advance.","tags":["Graph Coloring","Streaming Model","Graph Algorithms"],"title":"Graph Coloring via Degeneracy in Streaming and Other Space-Conscious Models","type":"publication"},{"authors":["Suman K. Bera","[Noujan Pashanasangi](https://users.soe.ucsc.edu/~npasha/)","[C. Seshadhri](https://users.soe.ucsc.edu/~sesh/)"],"categories":["published"],"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"45fc8fa641d5734f144295e0e0cf1048","permalink":"https://skalyanb.github.io/publication/bera-2020-linear/","publishdate":"2020-01-09T01:14:13.742332Z","relpermalink":"/publication/bera-2020-linear/","section":"publication","summary":"We consider the problem of counting all $k$-vertex subgraphs in an input graph, for any constant $k$. This problem (denoted SUB-CNT$_k$) has been studied extensively in both theory and practice. In a classic result, Chiba and Nishizeki (SICOMP 85) gave linear time algorithms for clique and 4-cycle counting for *bounded degeneracy graphs*. This is a rich class of sparse graphs that contains, for example, all minor-free families and preferential attachment graphs. The techniques from this result have inspired a number of recent practical algorithms for SUB-CNT$\\_k$. Towards a better understanding of the limits of these techniques, we ask: for what values of $k$ can SUB-CNT$\\_k$ be solved in linear time? We discover a chasm at $k=6$. Specifically, we prove that for $k ","tags":["Subgraph Counting","Lower Bounds","Graph Algorithms","Graph Mining"],"title":"Linear Time Subgraph Counting, Graph Degeneracy, and the Chasm at Size Six","type":"publication"},{"authors":["Suman K. Bera","[Deeparnab Chakrabarty](https://www.cs.dartmouth.edu/~deepc/)","Nicolas Flores","[Maryam Negahbani](https://www.cs.dartmouth.edu/~maryam/)"],"categories":["published"],"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"725de0242f087cfb0e7691783e5f5068","permalink":"https://skalyanb.github.io/publication/bera-2019-fair/","publishdate":"2020-01-09T01:14:13.739623Z","relpermalink":"/publication/bera-2019-fair/","section":"publication","summary":"We study the problem of finding low-cost *fair clusterings* in data where each data point  may belong to many protected groups. Our work significantly generalizes the seminal work of Chierichetti et al. (NIPS 2017) as follows.\n\n* We allow the user to specify the parameters that define fair representation. More precisely, these parameters define the maximum over- and minimum under-representation of any group in any cluster.\n\n* Our clustering algorithm works on any $\\ell_p$-norm objective (e.g. $k$-means, $k$-median, and $k$-center). Indeed, our algorithm transforms any vanilla clustering solution into a fair one incurring only a slight loss in quality.\n\n* Our algorithm also allows individuals to lie in multiple protected groups. In other words, we do not need the protected groups to partition the data and we can maintain fairness across different groups simultaneously.\n\nOur experiments show that on established data sets, our algorithm performs much better in practice than what our theoretical results suggest. ","tags":["Fairness in ML","Clustering"],"title":"Fair Algorithms for Clustering","type":"publication"},{"authors":null,"categories":null,"content":"\r [Mar 2022] At Katana Graph, we have developed a simple graph neural network (gnn) based AI model SimGCN that is dominating the leaderboards at TDC ADMET Benchmark Group! Check out our report and Github repo.\n [Feb 2022] Excited to serve on the program committee of ACM FAccT Conference 2022.\n [Jan 2022] Two papers accepted at the Web Conference! Details to be updated soon.\n [Nov 2021] Our paper titled Counting Subgraphs in Degenerate Graphs has been accepted for publications at the Journal of the ACM! Arxiv preprint will be posted soon.\n [Oct 2021] Serving on the program committee of The Web Conference 2022.\n [June 2021] Excited to join the Graph AI team at Katana Graph, a start-up that is providing a distributed scalable graph intelligence platform!\n [Feb 2021] Serving on the program committee of The International Conference on Database Theory (ICDT).\n [Jan 2021] Attend the talk on our paper titled Near-Linear Time Homomorphism Counting in Bounded Degeneracy Graphs: The Barrier of Long Induced Cycles at SODA 2021. Details here.\n [Oct 2020] Our paper titled Near-Linear Time Homomorphism Counting in Bounded Degeneracy Graphs: The Barrier of Long Induced Cycles has been accepted for publications at SODA 2021! Arxiv Preprint is now available!\n [Oct 2020] Serving on the program committee of The Web Conference 2021.\n [June 2020] New paper at KDD! Our paper titled How to Count Triangles, without Seeing the Whole Graph has ben accepted for publications at KDD 2020! Arxiv Preprint is now available!\n  ","date":1512104400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640671370,"objectID":"a0812ae5f3c926fea6faf4472cefc8e2","permalink":"https://skalyanb.github.io/news/","publishdate":"2017-12-01T00:00:00-05:00","relpermalink":"/news/","section":"","summary":"\r\nList of news.\r\n","tags":[],"title":"News","type":"page"},{"authors":["Suman K. Bera","[Amit Chakrabarti](https://www.cs.dartmouth.edu/~ac/)"],"categories":["published"],"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"49f9f8ade1f65d3075f789158385c667","permalink":"https://skalyanb.github.io/publication/bera-2017-towards/","publishdate":"2020-01-09T01:14:13.736861Z","relpermalink":"/publication/bera-2017-towards/","section":"publication","summary":"We revisit the much-studied problem of space-efficiently estimating the number of triangles in a graph stream, and extensions of this problem to counting fixed-sized cliques and cycles, obtaining a number of new upper and lower bounds. For the important special case of counting triangles, we give a $4$-pass, $(1\\pm\\varepsilon)$-approximate, randomized algorithm that needs at most $\\widetilde{O}(\\varepsilon^{-2}\\, m^{{3}/{2}}/T)$ space, where $m$ is the number of edges and $T$ is a promised lower bound on the number of triangles. This matches the space bound of a very recent algorithm (McGregor et al., PODS 2016), with an arguably simpler and more general technique. We give an improved multi-pass lower bound of $\\Omega(\\min  (m^{{3}/{2}}/T, m/\\sqrt{T})  )$, applicable at essentially all densities $\\Omega(n) \\le m \\le O(n^2)$. We also prove other multi-pass lower bounds in terms of various structural parameters of the input graph. Together, our results resolve a couple of open questions raised in recent work (Braverman et al., ICALP 2013).\n\n\nOur presentation emphasizes more general frameworks, for both upper and lower bounds. We give a sampling algorithm for counting arbitrary subgraphs and then improve it via combinatorial means in the special cases of counting odd cliques and odd cycles.  Our results show that these problems are considerably easier in the cash-register streaming model than in the turnstile model, where previous work had focused (Manjunath et al., ESA 2011; Kane et al., ICALP 2012).  We use Tur'an graphs and related gadgets to derive lower bounds for counting cliques and cycles, with triangle-counting lower bounds following as a corollary. ","tags":["Streaming Model","Triangle Counting","Subgraph Counting","Lower Bounds","Graph Algorithms"],"title":"Towards Tighter Space Bounds for Counting Triangles and Other Substructures in Graph Streams","type":"publication"},{"authors":["Suman K. Bera","[Amit Chakrabarti](https://www.cs.dartmouth.edu/~ac/)"],"categories":["published"],"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"0f55bc431c9d18d3b36dbc2a31ce57cf","permalink":"https://skalyanb.github.io/publication/bera-2015-depth/","publishdate":"2015-01-01T00:00:00Z","relpermalink":"/publication/bera-2015-depth/","section":"publication","summary":"We prove that certain instances of the iterated matrix multiplication (IMM) family of polynomials with $N$ variables and degree $n$ require $N^{\\Omega(\\sqrt n)}$ gates when expressed as a homogeneous depth-five $\\Sigma \\Pi \\Sigma \\Pi \\Sigma$ arithmetic circuit with the bottom fan-in bounded by $N^{{1}/{2}-\\varepsilon}$. By a depth-reduction result of Tavenas, this size lower bound is optimal and can be achieved by the weaker class of homogeneous depth-four $\\Sigma\\Pi\\Sigma\\Pi$ circuits.\n\n\nOur result extends a recent result of Kumar and Saraf, who gave the same $N^{\\Omega(\\sqrt n)}$ lower bound for homogeneous depth-four $\\Sigma \\Pi \\Sigma \\Pi$ circuits computing IMM. It is analogous to a recent result of Kayal and Saha, who gave the same lower bound for homogeneous $\\Sigma \\Pi \\Sigma \\Pi \\Sigma$ circuits (over characteristic zero) with bottom fan-in at most $N^{1-\\varepsilon}$, for the harder problem of computing certain polynomials defined by Nisan--Wigderson designs. ","tags":["Arithmetic Circuits","Complexity Theory"],"title":"A Depth-Five Lower Bound for Iterated Matrix Multiplication","type":"publication"},{"authors":["Suman K. Bera","[Syamantak Das](http://faculty.iiitd.ac.in/~syamantak/)","[Amit Kumar](http://www.cse.iitd.ernet.in/~amitk/)"],"categories":["published"],"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"5ccbfbd634d288ec48f0fb02df1a8058","permalink":"https://skalyanb.github.io/publication/bera-2016-minimizing/","publishdate":"2020-01-09T01:14:13.73523Z","relpermalink":"/publication/bera-2016-minimizing/","section":"publication","summary":"","tags":null,"title":"Minimizing Average Flow-Time under Knapsack Constraint","type":"publication"},{"authors":["Suman K. Bera","Anamitra R Choudhury","Syamantak Das","Sambuddha Roy","Jayram S Thatchachar"],"categories":["manuscripts"],"content":"","date":1379894400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"2a39022790b09e3c7a79ac6f2914a114","permalink":"https://skalyanb.github.io/publication/bera-2013-fenchel/","publishdate":"2020-01-09T01:14:13.735784Z","relpermalink":"/publication/bera-2013-fenchel/","section":"publication","summary":"","tags":null,"title":"Fenchel Duals for Drifting Adversaries","type":"publication"},{"authors":["Suman K. Bera","Shalmoli Gupta","[Amit Kumar](http://www.cse.iitd.ernet.in/~amitk/)","Sambuddha Roy"],"categories":["published"],"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"da5c6feb935cc9b1e5672f8ae6fb8e22","permalink":"https://skalyanb.github.io/publication/bera-2014-approximation/","publishdate":"2013-01-01T00:00:00Z","relpermalink":"/publication/bera-2014-approximation/","section":"publication","summary":"","tags":null,"title":"Approximation Algorithms for the Partition Vertex Cover Problem","type":"publication"},{"authors":["Sourav Dutta","Ankur Narang","Suman K. Bera"],"categories":["published"],"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"b43dcbaad9c0cd8b119c97619bf417f9","permalink":"https://skalyanb.github.io/publication/dutta-2013-streaming/","publishdate":"2020-01-09T01:14:13.73626Z","relpermalink":"/publication/dutta-2013-streaming/","section":"publication","summary":"","tags":null,"title":"Streaming Quotient Filter: A Near Optimal Approximate Duplicate Detection Approach for Data Streams","type":"publication"},{"authors":["Suman K. Bera","Sourav Dutta","Ankur Narang","Souvik Bhattacherjee"],"categories":["manuscripts"],"content":"","date":1355702400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596078981,"objectID":"d9913598aba3887503a1606cf3773c58","permalink":"https://skalyanb.github.io/publication/bera-2012-advanced/","publishdate":"2020-01-09T01:14:13.738109Z","relpermalink":"/publication/bera-2012-advanced/","section":"publication","summary":"","tags":null,"title":"Advanced Bloom Filter Based Algorithms for Efficient Approximate Data De-Duplication in Streams","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596512128,"objectID":"fde3b1692e0328ec3b8389ab0911036b","permalink":"https://skalyanb.github.io/pubs/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pubs/","section":"","summary":"","tags":null,"title":"Publications","type":"widget_page"}]